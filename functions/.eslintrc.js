/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
  'env': {
    'browser': true,
    'es6': true,
    'jest': true
  },
  'extends': [
    'eslint:recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
    'google',
    'plugin:@typescript-eslint/recommended',
    'prettier',
  ],
  'ignorePatterns': [
    '/lib/**/*',
  ],
  'parser': '@typescript-eslint/parser',
  'parserOptions': {
    'project': 'tsconfig.json',
    'sourceType': 'module',
  },
  'plugins': [
    'eslint-plugin-import',
    '@typescript-eslint',
  ],
  'root': true,
  'rules': {
    '@typescript-eslint/adjacent-overload-signatures': 'error',
    '@typescript-eslint/ban-ts-comment': 'error',
    '@typescript-eslint/ban-types': 'error',
    '@typescript-eslint/explicit-module-boundary-types': 'warn',
    '@typescript-eslint/no-array-constructor': 'error',
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/no-empty-interface': 'warn',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-extra-non-null-assertion': 'error',
    '@typescript-eslint/no-extra-semi': 'error',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/no-inferrable-types': 'error',
    '@typescript-eslint/no-misused-new': 'error',
    '@typescript-eslint/no-namespace': 'error',
    '@typescript-eslint/no-non-null-asserted-optional-chain': 'error',
    '@typescript-eslint/no-non-null-assertion': 'warn',
    '@typescript-eslint/no-shadow': [
      'off',
      {
        'hoist': 'all',
      },
    ],
    '@typescript-eslint/no-this-alias': 'error',
    '@typescript-eslint/no-unnecessary-type-assertion': 'error',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-use-before-define': 'error',
    '@typescript-eslint/no-var-requires': 'error',
    '@typescript-eslint/prefer-as-const': 'error',
    '@typescript-eslint/prefer-for-of': 'warn',
    '@typescript-eslint/prefer-namespace-keyword': 'error',
    '@typescript-eslint/triple-slash-reference': 'error',
    '@typescript-eslint/unified-signatures': 'warn',
    'array-bracket-newline': 'off',
    'array-bracket-spacing': [
      'error',
      'never',
    ],
    'array-element-newline': 'off',
    'arrow-parens': [
      'error',
      'always',
    ],
    'block-spacing': [
      'error',
      'never',
    ],
    'brace-style': 'error',
    'camelcase': [
      'error',
      {
        'properties': 'never',
        'ignoreDestructuring': false,
        'ignoreImports': false,
        'ignoreGlobals': false,
      },
    ],
    'comma-dangle': 'warn',
    'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    'constructor-super': 'error',
    'curly': [
      'error',
      'multi-line',
    ],
    'eol-last': 'error',
    'eqeqeq': [
      'warn',
      'always',
    ],
    'for-direction': 'error',
    'func-call-spacing': 'error',
    'generator-star-spacing': [
      'error',
      'after',
    ],
    'getter-return': 'error',
    'guard-for-in': 'error',
    'import/default': 'error',
    'import/export': 'error',
    'import/named': 'off',
    'import/namespace': 'error',
    'import/no-deprecated': 'warn',
    'import/no-duplicates': 'warn',
    'import/no-extraneous-dependencies': 'error',
    'import/no-named-as-default': 'warn',
    'import/no-named-as-default-member': 'warn',
    'import/no-unassigned-import': 'warn',
    'import/no-unresolved': 'error',
    'indent': [
      'error',
      2,
      {
        'CallExpression': {
          'arguments': 2,
        },
        'FunctionDeclaration': {
          'body': 1,
          'parameters': 2,
        },
        'FunctionExpression': {
          'body': 1,
          'parameters': 2,
        },
        'MemberExpression': 2,
        'ObjectExpression': 1,
        'SwitchCase': 1,
        'ignoredNodes': [
          'ConditionalExpression',
        ],
        'flatTernaryExpressions': false,
        'offsetTernaryExpressions': false,
        'ignoreComments': false,
      },
    ],
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'linebreak-style': 'error',
    'max-len': [
      'warn',
      {
        'code': 120,
      },
    ],
    'new-cap': 'error',
    'no-array-constructor': 'off',
    'no-async-promise-executor': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-class-assign': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': 'error',
    'no-const-assign': 'error',
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-delete-var': 'error',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-empty': [
      'error',
      {
        'allowEmptyCatch': true,
      },
    ],
    'no-empty-character-class': 'error',
    'no-empty-function': 'off',
    'no-empty-pattern': 'error',
    'no-ex-assign': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-semi': 'off',
    'no-fallthrough': 'error',
    'no-func-assign': 'error',
    'no-global-assign': 'error',
    'no-import-assign': 'error',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-invalid-this': 'error',
    'no-irregular-whitespace': 'error',
    'no-misleading-character-class': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-spaces': 'error',
    'no-multi-str': 'error',
    'no-multiple-empty-lines': [
      'error',
      {
        'max': 2,
      },
    ],
    'no-new-object': 'error',
    'no-new-symbol': 'error',
    'no-new-wrappers': 'error',
    'no-obj-calls': 'error',
    'no-octal': 'error',
    'no-param-reassign': 'error',
    'no-prototype-builtins': 'error',
    'no-redeclare': 'error',
    'no-regex-spaces': 'error',
    'no-self-assign': 'error',
    'no-sequences': 'error',
    'no-setter-return': 'error',
    'no-shadow': 'off',
    'no-shadow-restricted-names': 'error',
    'no-sparse-arrays': 'error',
    'no-tabs': 'error',
    'no-this-before-super': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-undef': 'error',
    'no-unexpected-multiline': 'error',
    'no-unreachable': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unused-labels': 'error',
    'no-unused-vars': 'off',
    'no-use-before-define': 'off',
    'no-useless-catch': 'error',
    'no-useless-escape': 'error',
    'no-var': 'warn',
    'no-void': 'error',
    'no-with': 'error',
    'object-curly-spacing': [
      'error',
      'always',
    ],
    'one-var': [
      'error',
      {
        'var': 'never',
        'let': 'never',
        'const': 'never',
      },
    ],
    'operator-linebreak': [
      'error',
      'before',
      {
        'overrides': {
          '=': 'after',
          '?': 'after',
        },
      },
    ],
    'padded-blocks': [
      'warn',
      {
        'classes': 'always',
      },
    ],
    'prefer-const': 'warn',
    'prefer-promise-reject-errors': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'quote-props': [
      'error',
      'consistent',
    ],
    'quotes': [
      'error',
      'single',
    ],
    'require-jsdoc': [
      'warn',
      {
        'require': {
          'FunctionDeclaration': true,
          'MethodDefinition': true,
          'ClassDeclaration': true,
          'ArrowFunctionExpression': false,
          'FunctionExpression': false,
        },
      },
    ],
    'require-yield': 'error',
    'rest-spread-spacing': 'error',
    'semi': 'error',
    'semi-spacing': 'error',
    'space-before-blocks': 'error',
    'space-before-function-paren': [
      'error',
      {
        'asyncArrow': 'always',
        'anonymous': 'never',
        'named': 'never',
      },
    ],
    'spaced-comment': [
      'error',
      'always',
    ],
    'switch-colon-spacing': 'error',
    'use-isnan': 'error',
    'valid-jsdoc': [
      'error',
      {
        'requireParamDescription': false,
        'requireReturnDescription': false,
        'requireReturn': false,
        'prefer': {
          'returns': 'return',
        },
        'requireReturnType': true,
        'requireParamType': true,
      },
    ],
    'valid-typeof': 'error',
    'yield-star-spacing': [
      'error',
      'after',
    ],
  },
  'settings': {
    'import/extensions': [
      '.ts',
      '.tsx',
      '.js',
      '.jsx',
    ],
    'import/external-module-folders': [
      'node_modules',
      'node_modules/@types',
    ],
    'import/parsers': {
      '@typescript-eslint/parser': [
        '.ts',
        '.tsx',
      ],
    },
    'import/resolver': {
      'node': {
        'extensions': [
          '.ts',
          '.tsx',
          '.js',
          '.jsx',
        ],
      },
    },
  },
};
